{"version":3,"sources":["ToDoLists.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoLists","props","className","aria-hidden","onClick","onSelect","id","text","App","useState","inputList","setInputList","items","setItems","deleteItems","oldItems","filter","arrayElement","index","type","value","placeholder","onChange","event","target","map","itemval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAkBeA,EAhBE,SAACC,GAGhB,OACE,mCACA,sBAAKC,UAAU,aAAf,UACA,mBAAGA,UAAU,cAAcC,cAAY,OACvCC,QAAS,WACPH,EAAMI,SAASJ,EAAMK,OAEtB,6BAAKL,EAAMM,aCuCDC,EA7CJ,WAAM,IAAD,EACoBC,mBAAS,IAD7B,mBACPC,EADO,KACIC,EADJ,OAEYF,mBAAS,IAFrB,mBAEPG,EAFO,KAEAC,EAFA,KAcRC,EAAY,SAACR,GACjBO,GAAS,SAACE,GACR,OAAOA,EAASC,QAAO,SAACC,EAAcC,GAClC,OAAOA,IAAUZ,SAKzB,OACC,mCACG,qBAAKJ,UAAU,WAAf,SACI,sBAAKA,UAAU,aAAf,UACG,uBACA,2CACA,uBACA,uBAAOiB,KAAK,OACZC,MAAOV,EAAWW,YAAY,cAAcC,SA1BtC,SAACC,GAChBZ,EAAaY,EAAMC,OAAOJ,UA0BjB,wBAAQhB,QAxBA,WACjBS,GAAS,SAACE,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAqBL,OAEvBC,EAAa,KAoBJ,iBAEA,6BAEIC,EAAMa,KAAI,SAACC,EAASR,GACnB,OAAO,cAAC,EAAD,CAAuBZ,GAAIY,EAAOX,KAAMmB,EAASrB,SAAUS,GAA3CI,gBC9B1BS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8c7bcc37.chunk.js","sourcesContent":["import React from 'react';\n\nconst ToDoLists =(props)=> {\n\n  \n  return (\n    <>\n    <div className=\"todo_style\">\n    <i className=\"fa fa-times\" aria-hidden=\"true\" \n    onClick={()=>{\n      props.onSelect(props.id)\n    }}/>\n     <li>{props.text}</li> \n     </div>\n     </>\n  );\n}\n\nexport default ToDoLists;\n","import React,{useState} from 'react';\nimport './App.css';\nimport ToDoLists from './ToDoLists';\n\n\n\nconst App =()=> {\n  const [inputList, setInputList] = useState(\"\");\n  const [items, setItems] = useState([]);\n\n  const itemEvent =(event)=>{\n    setInputList(event.target.value)\n  }\n  const listofItems =()=>{\n    setItems((oldItems)=>{\n      return [...oldItems, inputList]\n    })\n    setInputList('');\n  }\n\n  const deleteItems=(id)=>{\n    setItems((oldItems)=>{\n      return oldItems.filter((arrayElement, index)=>{\n          return index !== id;\n      })\n    })\n  }\n\n  return (\n   <>\n      <div className=\"main_div\">\n          <div className='center_div'>\n             <br/>\n             <h1>Todo List</h1>\n             <br/>\n             <input type='text'\n             value={inputList} placeholder=\"Add a Items\" onChange={itemEvent}/>\n             <button onClick={listofItems}> + </button>\n\n             <ol>\n                \n                {items.map((itemval, index)=>{\n                  return <ToDoLists key={index} id={index} text={itemval} onSelect={deleteItems}/> \n                })}\n             </ol>\n          </div>\n      </div>\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}